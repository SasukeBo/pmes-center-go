type YieldWrap {
    name: String!
    value: Float!
}

type PointResultsWrap {
    pointResults: [PointResult!]
    total: Int!
}

type PointResult {
    total: Int
    s: Float
    ok: Int
    ng: Int
    cp: Float
    cpk: Float
    avg: Float
    max: Float
    min: Float
    dataset: Map
    point: Point
}

input PointCreateInput {
    id: Int
    name: String!
    usl: Float!
    nominal: Float!
    lsl: Float!
}

############################ new ############################

type PointWrap {
    points: [Point]!
    total: Int!
}

type Point {
    id: Int!
    name: String!
    upperLimit: Float!
    nominal: Float!
    lowerLimit: Float!
}

