type Query {
  "获取当前用户"
  currentUser: User!
  "获取产品数据，当服务器没有找到数据并且FTP有数据文件时，需要返回pending: true"
  products(searchInput: Search!, page: Int, limit: Int!, offset: Int): ProductWrap!
  "导出产品数据，返回opID，表示处理的uuid"
  exportProducts(searchInput: Search!): String!
  "分析点位数据"
  analyzePoint(searchInput: Search!, limit: Int!, offset: Int!): PointResultsWrap!
  "分析料号数据，当服务器没有找到数据并且FTP有数据文件时，需要返回pending: true"
  analyzeMaterial(searchInput: Search!): MaterialResult!
  "分析设备数据，当服务器没有找到数据并且FTP有数据文件时，需要返回pending: true"
  analyzeDevice(searchInput: Search!): DeviceResult!
  "获取尺寸数据"
  sizes(page: Int!, limit: Int!, materialID: Int!): SizeWrap!
  "获取料号数据"
  materials(page: Int!, limit: Int!): MaterialWrap!
  "获取料号数据，包括名称模糊搜索"
  materialsWithSearch(offset: Int!, limit: Int!, search: String): MaterialWrap!
  "获取设备生产数据"
  devices(materialID: Int!): [Device]!
  "数据获取完成百分比"
  dataFetchFinishPercent(fileIDs: [Int]!): Float!
  "数据导出完成比例"
  exportFinishPercent(opID: String!): ExportResponse!
}

type Mutation {
  "登入"
  login(loginInput: LoginInput!): User!
  "登出"
  logout: String!
  setting(settingInput: SettingInput!): SystemConfig!
  "增加料号，需要返回pending: true和fileListIDs"
  addMaterial(input: MaterialCreateInput!): AddMaterialResponse!
  "编辑料号"
  updateMaterial(input: MaterialUpdateInput!): Material!
  "删除料号"
  deleteMaterial(id: Int!): String!
  "取消导出"
  cancelExport(opID: String!): String!
}

type ExportResponse {
  percent: Float!
  message: String!
  fileName: String
  finished: Boolean!
}

input MaterialUpdateInput {
  id: Int!
  customerCode: String
  projectRemark: String
}

input MaterialCreateInput {
  name: String!
  customerCode: String
  projectRemark: String
}

type fetchStatus {
  message: String
  pending: Boolean
  fileIDs: [Int!]
}

type DeviceResult {
  device: Device
  ok: Int
  ng: Int
  status: fetchStatus
}

type MaterialResult {
  material: Material
  ok: Int
  ng: Int
  status: fetchStatus
}

type PointResultsWrap {
  pointResults: [PointResult!]
  total: Int!
}

type PointResult {
  total: Int
  s: Float
  ok: Int
  ng: Int
  cp: Float
  cpk: Float
  avg: Float
  max: Float
  min: Float
  dataset: Map
  point: Point
}

type Size {
  id: Int
  name: String
  MaterialID: Int
}

type Point {
  id: Int
  name: String
  upperLimit: Float
  norminal: Float
  lowerLimit: Float
}

type SizeWrap {
  total: Int
  sizes: [Size!]
}

type Device {
  id: Int
  name: String
}

type MaterialWrap {
  total: Int
  materials: [Material!]
}

type Material {
  id: Int!
  name: String!
  customerCode: String
  projectRemark: String
}

type AddMaterialResponse {
  material: Material
  status: fetchStatus
}

type SystemConfig {
  id: Int
  key: String
  value: String
  createdAt: Time
  updatedAt: Time
}

type User {
  id: Int
  account: String
  admin: Boolean
}

type Product {
  id: Int
  uuid: String
  materialID: Int
  deviceID: Int
  qualified: Boolean
  pointValue: Map
  createdAt: Time
  d2code: String
  lineID: String
  jigID: String
  mouldID: String
  shiftNumber: String
}

type ProductWrap {
  tableHeader: [String!]
  products: [Product!]
  status: fetchStatus
  total: Int
}

input LoginInput {
  account: String!
  password: String!
}

input SettingInput {
  key: String!
  value: String!
}

input Search {
  "料号，指定料号"
  materialID: Int
  "设备名称，如果不为空则指定该设备生产"
  deviceID: Int
  "查询时间范围起始时间"
  beginTime: Time
  "查询时间范围结束时间"
  endTime: Time
  "其他查询条件以map形式传递"
  extra: Map
}

scalar Time
scalar Map
